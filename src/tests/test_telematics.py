# src/tests/test_telematics.py
from src.models.lightgbm.telematics_model import TelematicsRiskModel
import pandas as pd

def print_trip_summary(trip_df: pd.DataFrame, title: str):
    """
    –í—ã–≤–æ–¥–∏—Ç –ø–æ–¥—Ä–æ–±–Ω—É—é —Å–≤–æ–¥–∫—É –ø–æ –ø–æ–µ–∑–¥–∫–µ.
    """
    row = trip_df.iloc[0]
    print(f"\n{'='*60}")
    print(f"üìå {title.upper()}")
    print(f"{'='*60}")
    print(f"üöó –û–±—â–∏–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã:")
    print(f"   ‚Ä¢ –°—Ä–µ–¥–Ω—è—è —Å–∫–æ—Ä–æ—Å—Ç—å:      {row['avg_speed']:>6.1f} –∫–º/—á")
    print(f"   ‚Ä¢ –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è —Å–∫–æ—Ä–æ—Å—Ç—å: {row['max_speed']:>6.1f} –∫–º/—á")
    print(f"   ‚Ä¢ –ö–æ–ª–µ–±–∞–Ω–∏—è —Å–∫–æ—Ä–æ—Å—Ç–∏:    {row['std_speed']:>6.1f} –∫–º/—á")
    print(f"   ‚Ä¢ –ü—Ä–æ–±–µ–≥:                {row['distance_km']:>6.1f} –∫–º")
    print(f"   ‚Ä¢ –î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å:          {row['trip_duration_min']:>6.0f} –º–∏–Ω")

    print(f"\nüåô –í–æ–∂–¥–µ–Ω–∏–µ –≤ —Ç–µ–º–Ω–æ–µ –≤—Ä–µ–º—è:")
    print(f"   ‚Ä¢ –î–æ–ª—è –Ω–æ—á–Ω—ã—Ö –ø–æ–µ–∑–¥–æ–∫:    {row['night_driving_ratio']:.0%}")

    print(f"\nüîß –¢–µ—Ö–Ω–∏—á–µ—Å–∫–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ:")
    print(f"   ‚Ä¢ –ï—Å—Ç—å –æ—à–∏–±–∫–∏ DTC:        {'–î–∞' if row['has_dtc_errors'] else '–ù–µ—Ç'}")
    print(f"   ‚Ä¢ –°—Ä. —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ –û–ñ:     {row['avg_coolant_temp']:>6.0f} ¬∞C")
    print(f"   ‚Ä¢ –°—Ä. —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ –Ω–∞ –≤–ø—É—Å–∫–µ: {row['avg_iat']:>6.0f} ¬∞C")

def main():
    # –ü—Ä–∏–º–µ—Ä "—Å–ø–æ–∫–æ–π–Ω–æ–π" –ø–æ–µ–∑–¥–∫–∏
    safe_trip = pd.DataFrame([{
        'avg_speed': 45.0,
        'max_speed': 80.0,
        'std_speed': 8.0,
        'night_driving_ratio': 0.05,
        'trip_duration_min': 30,
        'distance_km': 25,
        'has_dtc_errors': False,
        'avg_coolant_temp': 90,
        'avg_iat': 25
    }])

    # –ü—Ä–∏–º–µ—Ä "–∞–≥—Ä–µ—Å—Å–∏–≤–Ω–æ–π" –ø–æ–µ–∑–¥–∫–∏
    risky_trip = pd.DataFrame([{
        'avg_speed': 65.0,
        'max_speed': 120.0,
        'std_speed': 22.0,
        'night_driving_ratio': 0.7,
        'trip_duration_min': 45,
        'distance_km': 60,
        'has_dtc_errors': True,
        'avg_coolant_temp': 98,
        'avg_iat': 30
    }])

    # –ó–∞–≥—Ä—É–∑–∫–∞ –º–æ–¥–µ–ª–∏
    model = TelematicsRiskModel(model_path="outputs/lightgbm/telematics_model_v1.pkl")
    print("‚úÖ –ú–æ–¥–µ–ª—å —Ç–µ–ª–µ–º–∞—Ç–∏–∫–∏ –∑–∞–≥—Ä—É–∂–µ–Ω–∞")

    # –°–≤–æ–¥–∫–∞ –ø–æ —Å–ø–æ–∫–æ–π–Ω–æ–π –ø–æ–µ–∑–¥–∫–µ
    print_trip_summary(safe_trip, "–°–ø–æ–∫–æ–π–Ω–∞—è –ø–æ–µ–∑–¥–∫–∞")
    risk_safe = model.predict_risk(safe_trip)
    print(f"\nüéØ –ü—Ä–æ–≥–Ω–æ–∑ –º–æ–¥–µ–ª–∏:")
    print(f"   ‚Üí –í–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å –î–¢–ü: {risk_safe:.2%}")

    # –°–≤–æ–¥–∫–∞ –ø–æ –∞–≥—Ä–µ—Å—Å–∏–≤–Ω–æ–π –ø–æ–µ–∑–¥–∫–µ
    print_trip_summary(risky_trip, "–ê–≥—Ä–µ—Å—Å–∏–≤–Ω–∞—è –ø–æ–µ–∑–¥–∫–∞")
    risk_risky = model.predict_risk(risky_trip)
    print(f"\nüéØ –ü—Ä–æ–≥–Ω–æ–∑ –º–æ–¥–µ–ª–∏:")
    print(f"   ‚Üí –í–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å –î–¢–ü: {risk_risky:.2%}")

    # –ò—Ç–æ–≥–æ–≤–æ–µ —Å—Ä–∞–≤–Ω–µ–Ω–∏–µ
    print("\n" + "="*60)
    if risk_risky > risk_safe:
        print("‚úÖ –ú–û–î–ï–õ–¨ –ö–û–†–†–ï–ö–¢–ù–û –û–¶–ï–ù–ò–í–ê–ï–¢ –ü–û–í–ï–î–ï–ù–ò–ï")
        print(f"   –†–∞–∑–Ω–∏—Ü–∞ –≤ —Ä–∏—Å–∫–µ: {risk_risky - risk_safe:.2%}")
    else:
        print("‚ö†Ô∏è  –ú–æ–¥–µ–ª—å –Ω–µ —Ä–∞–∑–ª–∏—á–∞–µ—Ç —É—Ä–æ–≤–Ω–∏ —Ä–∏—Å–∫–∞ ‚Äî —Ç—Ä–µ–±—É–µ—Ç—Å—è –¥–æ–æ–±—É—á–µ–Ω–∏–µ")

if __name__ == "__main__":
    main()